# See https://github.com/scikit-learn/scikit-learn/blob/main/.github/workflows/wheels.yml
# and https://github.com/scikit-learn/scikit-learn/blob/main/build_tools/github/build_wheels.sh

name: scikit-learn

on: [workflow_dispatch]

env:
  VERSION: 1.2.0
  CIBW_BUILD: nogil39-*
  CIBW_ARCHS_LINUX: auto
  CIBW_ARCHS_MACOS: x86_64 arm64
  CIBW_ARCHS_WINDOWS: AMD64
  CIBW_BUILD_VERBOSITY: 3

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'scikit-learn/scikit-learn'
          ref: ${{ env.VERSION }}

      # See https://github.com/scikit-learn/scikit-learn/blob/main/build_tools/github/build_wheels.sh
      - name: Configure macOS
        if: ${{ runner.os == 'macOS' }}
        run: |
          if [[ "$CIBW_BUILD" == *-macosx_arm64 ]]; then
              if [[ $(uname -m) == "x86_64" ]]; then
                  # arm64 builds must cross compile because the CI instance is x86
                  # This turns off the computation of the test program in
                  # sklearn/_build_utils/pre_build_helpers.py
                  export PYTHON_CROSSENV=1
                  echo PYTHON_CROSSENV=1 >> $GITHUB_ENV
              fi
              # SciPy requires 12.0 on arm to prevent kernel panics
              # https://github.com/scipy/scipy/issues/14688
              # We use the same deployment target to match SciPy.
              export MACOSX_DEPLOYMENT_TARGET=12.0
              OPENMP_URL="https://anaconda.org/conda-forge/llvm-openmp/11.1.0/download/osx-arm64/llvm-openmp-11.1.0-hf3c4609_1.tar.bz2"
          else
              export MACOSX_DEPLOYMENT_TARGET=10.9
              OPENMP_URL="https://anaconda.org/conda-forge/llvm-openmp/11.1.0/download/osx-64/llvm-openmp-11.1.0-hda6cdc1_1.tar.bz2"
          fi

          sudo conda create -n build $OPENMP_URL
          PREFIX="$CONDA_HOME/envs/build"

          echo MACOSX_DEPLOYMENT_TARGET=$MACOSX_DEPLOYMENT_TARGET >> $GITHUB_ENV
          echo CC=/usr/bin/clang >> $GITHUB_ENV
          echo CXX=/usr/bin/clang++ >> $GITHUB_ENV
          echo CPPFLAGS="$CPPFLAGS -Xpreprocessor -fopenmp" >> $GITHUB_ENV
          echo CFLAGS="$CFLAGS -I$PREFIX/include" >> $GITHUB_ENV
          echo CXXFLAGS="$CXXFLAGS -I$PREFIX/include" >> $GITHUB_ENV
          echo LDFLAGS="$LDFLAGS -Wl,-rpath,$PREFIX/lib -L$PREFIX/lib -lomp" >> $GITHUB_ENV

      - name: Build wheels
        uses: colesbury/cibuildwheel@nogil

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  upload_wheel:
    needs: [build_wheels]
    uses: ./.github/workflows/upload-wheel.yml
    with:
      AWS_BUCKET: pypi-test.sam-gross.com
    secrets: inherit
